ViewModel

    /*
    Data Fetching: The ViewModel retrieves data from the Model layer by calling its properties or methods.
    The Model exposes the necessary data structures and behaviors to fulfill the ViewModel's data requirements.

    Data Transformation: The ViewModel may transform or aggregate data obtained from the Model to prepare it
    for presentation in the View. This involves formatting, filtering, or sorting data as needed.

    Data Updating: The ViewModel updates the Model when user interactions trigger changes in the View.
    It calls Model methods to persist the updated data or reflect the changes in the underlying data structures.
     */

    /*
    https://developer.android.com/topic/architecture/recommendations

    --

    Unit test ViewModels, including Flows.
    Unit test data layer entities. That is, repositories and data sources.
    UI navigation tests that are useful as regression tests in CI.

    --

    Random.nextInt(from = 1, until = 7)
     */

=================

Model


    /*
    Data Access: The Model interacts with the Repository to retrieve data from persistent storage or external sources.
    The Repository provides methods for accessing, retrieving, and manipulating data according to the application's requirements.

    Data Persistence: The Model updates the Repository when data changes occur. It calls Repository methods to persist the
    updated data in the appropriate data source, ensuring data consistency.

    Data Abstraction: The Repository acts as an abstraction layer, hiding the implementation details of the data sources from the Model.
    This allows the Model to focus on business logic without worrying about the intricacies of data access and persistence.
     */

=================

